name: Build, Test and Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Run tests with coverage
        run: |
          dotnet test --no-build --configuration Release \
            --logger "trx;LogFileName=test_results.trx" \
            /p:CollectCoverage=true \
            /p:CoverletOutput=./TestResults/coverage/ \
            /p:CoverletOutputFormat=cobertura

      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: Generate coverage report
        run: |
          reportgenerator \
            -reports:./**/TestResults/coverage/coverage.cobertura.xml \
            -targetdir:./TestResults/CoverageReport \
            -reporttypes:HtmlInline_AzurePipelines

      - name: Report test results in PR
        if: github.event_name == 'pull_request'
        uses: dorny/test-reporter@v1
        with:
          name: 'Test Results'
          path: '**/test_results.trx'
          reporter: dotnet-trx
          fail-on-error: false

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ./TestResults/CoverageReport
